##STARTING Version 1.0
Tue Jun 20 21:27:28 CEST 2017
##Start machine report version 1.0
##Compiler
GCC version 4.2.1 Compatible Clang 3.9.0 (git@github.com:martong/clang.git 9839b199638fbf35d01bdc09e57e9430c5b3f1b9) (git@github.com:martong/llvm.git 7481ed38afc3b6b1fbcfb946c9d1501f1c6232c1)
Compiled for LP64
##Target CPU
Compiled for x86 64bit
##Physical CPU
Mach CPU type 7
CPU_TYPE x86
Mach CPU subtype 8
CPU frequency: 2300.00 Mhz
CPU has optional floating point instructions
CPU has MMX instructions
CPU has SSE instructions
CPU has SSE2 instructions
CPU has SSE3 instructions
CPU has x86_64 instructions
Little Endian
##Machine
Machine has 8 CPUs
Machine has 4 physical CPUs
Machine has 8 logical CPUs
Machine has 16.00 GBytes of RAM
Machine using 4.00 KBytes pagesize
##Operating System
Kernel OS Version: Darwin Kernel Version 15.6.0: Tue Apr 11 16:00:51 PDT 2017; root:xnu-3248.60.11.5.3~1/RELEASE_X86_64
##End machine report
./stepanov_abstraction 20000 

test                        description   absolute   operations   ratio with
number                                    time       per second   test0

 0                     "double pointer"   0.04 sec   1020.49 M     1.00
 1               "double pointer_class"   0.65 sec   61.31 M     16.64
 2         "DoubleValueWrapper pointer"   0.44 sec   90.53 M     11.27
 3   "DoubleValueWrapper pointer_class"   1.13 sec   35.48 M     28.76
 4       "DoubleValueWrapper10 pointer"   4.66 sec    8.58 M     118.97
 5 "DoubleValueWrapper10 pointer_class"   5.45 sec    7.34 M     139.00

Total absolute time for Abstraction Accumulate: 12.37 sec

Abstraction Accumulate Penalty: 38.91


test                                       description   absolute   operations   ratio with
number                                                   time       per second   test0

 0                     "insertion_sort double pointer"   0.00 sec    4.69 M     1.00
 1               "insertion_sort double pointer_class"   0.24 sec    0.08 M     56.81
 2         "insertion_sort DoubleValueWrapper pointer"   0.05 sec    0.41 M     11.35
 3   "insertion_sort DoubleValueWrapper pointer_class"   0.30 sec    0.07 M     70.06
 4       "insertion_sort DoubleValueWrapper10 pointer"   0.47 sec    0.04 M     110.59
 5 "insertion_sort DoubleValueWrapper10 pointer_class"   0.72 sec    0.03 M     168.03

Total absolute time for Abstraction Insertion Sort: 1.78 sec

Abstraction Insertion Sort Penalty: 60.92


test                                  description   absolute   operations   ratio with
number                                              time       per second   test0

 0                     "quicksort double pointer"   0.01 sec   17.85 M     1.00
 1               "quicksort double pointer_class"   0.06 sec    2.57 M     6.95
 2         "quicksort DoubleValueWrapper pointer"   0.02 sec    6.50 M     2.75
 3   "quicksort DoubleValueWrapper pointer_class"   0.08 sec    2.06 M     8.67
 4       "quicksort DoubleValueWrapper10 pointer"   0.16 sec    0.99 M     18.05
 5 "quicksort DoubleValueWrapper10 pointer_class"   0.22 sec    0.74 M     24.19

Total absolute time for Abstraction Quicksort: 0.55 sec

Abstraction Quicksort Penalty: 9.37


test                                  description   absolute   operations   ratio with
number                                              time       per second   test0

 0                     "heap_sort double pointer"   0.01 sec   17.66 M     1.00
 1               "heap_sort double pointer_class"   0.08 sec    1.98 M     8.93
 2         "heap_sort DoubleValueWrapper pointer"   0.01 sec   13.08 M     1.35
 3   "heap_sort DoubleValueWrapper pointer_class"   0.08 sec    1.91 M     9.24
 4       "heap_sort DoubleValueWrapper10 pointer"   0.10 sec    1.63 M     10.85
 5 "heap_sort DoubleValueWrapper10 pointer_class"   0.17 sec    0.95 M     18.67

Total absolute time for Abstraction Heap Sort: 0.45 sec

Abstraction Heap Sort Penalty: 7.42

./stepanov_vector 15000 

test                            description   absolute   operations   ratio with
number                                        time       per second   test0

 0                 "double pointer verify2"   0.03 sec   1171.74 M     1.00
 1                 "double vector iterator"   0.03 sec   1096.17 M     1.07
 2                 "double pointer reverse"   0.03 sec   1158.30 M     1.01
 3         "double vector reverse_iterator"   0.03 sec   1134.09 M     1.03
 4         "double vector iterator reverse"   0.03 sec   1168.27 M     1.00
 5         "double pointer reverse reverse"   0.03 sec   989.94 M     1.18
 6 "double vector reverse_iterator reverse"   0.03 sec   1146.57 M     1.02
 7 "double vector iterator reverse reverse"   0.03 sec   1133.14 M     1.03

Total absolute time for Vector accumulate: 0.21 sec

Vector accumulate Penalty: 1.05


test                                           description   absolute   operations   ratio with
number                                                       time       per second   test0

 0                 "insertion_sort double pointer verify2"   0.01 sec    4.71 M     1.00
 1                 "insertion_sort double vector iterator"   0.01 sec    3.11 M     1.52
 2                 "insertion_sort double pointer reverse"   0.01 sec    4.38 M     1.08
 3         "insertion_sort double vector reverse_iterator"   0.01 sec    4.35 M     1.08
 4         "insertion_sort double vector iterator reverse"   0.01 sec    4.53 M     1.04
 5         "insertion_sort double pointer reverse reverse"   0.01 sec    3.93 M     1.20
 6 "insertion_sort double vector reverse_iterator reverse"   0.01 sec    3.88 M     1.21
 7 "insertion_sort double vector iterator reverse reverse"   0.01 sec    3.92 M     1.20

Total absolute time for Vector Insertion Sort: 0.06 sec

Vector Insertion Sort Penalty: 1.18


test                                      description   absolute   operations   ratio with
number                                                  time       per second   test0

 0                 "quicksort double pointer verify2"   0.01 sec   17.83 M     1.00
 1                 "quicksort double vector iterator"   0.01 sec   17.93 M     0.99
 2                 "quicksort double pointer reverse"   0.01 sec   17.22 M     1.04
 3         "quicksort double vector reverse_iterator"   0.01 sec   17.00 M     1.05
 4         "quicksort double vector iterator reverse"   0.01 sec   16.10 M     1.11
 5         "quicksort double pointer reverse reverse"   0.02 sec   14.87 M     1.20
 6 "quicksort double vector reverse_iterator reverse"   0.02 sec   15.36 M     1.16
 7 "quicksort double vector iterator reverse reverse"   0.02 sec   14.67 M     1.22

Total absolute time for Vector Quicksort: 0.12 sec

Vector Quicksort Penalty: 1.11


test                                      description   absolute   operations   ratio with
number                                                  time       per second   test0

 0                 "heap_sort double pointer verify2"   0.01 sec   20.51 M     1.00
 1                 "heap_sort double vector iterator"   0.01 sec   20.55 M     1.00
 2                 "heap_sort double pointer reverse"   0.01 sec   16.95 M     1.21
 3         "heap_sort double vector reverse_iterator"   0.02 sec   15.88 M     1.29
 4         "heap_sort double vector iterator reverse"   0.02 sec   12.93 M     1.59
 5         "heap_sort double pointer reverse reverse"   0.01 sec   17.81 M     1.15
 6 "heap_sort double vector reverse_iterator reverse"   0.01 sec   17.26 M     1.19
 7 "heap_sort double vector iterator reverse reverse"   0.01 sec   17.72 M     1.16

Total absolute time for Vector Heap Sort: 0.11 sec

Vector Heap Sort Penalty: 1.22

./functionobjects 200 

test                                                description   absolute   operations   ratio with
number                                                            time       per second   test0

 0                          "qsort array with function pointer"   0.20 sec    9.84 M     1.00
 1             "quicksort function array with function pointer"   0.32 sec    6.29 M     1.57
 2             "quicksort template array with function pointer"   0.33 sec    6.10 M     1.61
 3    "quicksort template array with template function pointer"   0.32 sec    6.31 M     1.56
 4                           "sort array with function pointer"   0.23 sec    8.61 M     1.14
 5        "quicksort template array with user-supplied functor"   0.32 sec    6.25 M     1.57
 6                      "sort array with user-supplied functor"   0.22 sec    9.14 M     1.08
 7 "quicksort template array with user-supplied inline functor"   0.37 sec    5.41 M     1.82
 8               "sort array with user-supplied inline functor"   0.24 sec    8.40 M     1.17
 9             "quicksort template array with standard functor"   0.13 sec   15.77 M     0.62
10                           "sort array with standard functor"   0.09 sec   21.14 M     0.47
11            "quicksort template array with native < operator"   0.14 sec   14.67 M     0.67
12                          "sort array with native < operator"   0.10 sec   20.94 M     0.47

Total absolute time for Function Objects: 3.00 sec
Tue Jun 20 21:27:47 CEST 2017
##END Version 1.0
