##STARTING Version 1.0
Sun Jun 18 11:18:14 CEST 2017
##Start machine report version 1.0
##Compiler
GCC version 4.2.1 Compatible Clang 3.9.0 (git@github.com:martong/clang.git 9839b199638fbf35d01bdc09e57e9430c5b3f1b9) (git@github.com:martong/llvm.git 7481ed38afc3b6b1fbcfb946c9d1501f1c6232c1)
Compiled for LP64
##Target CPU
Compiled for x86 64bit
##Physical CPU
Mach CPU type 7
CPU_TYPE x86
Mach CPU subtype 8
CPU frequency: 2300.00 Mhz
CPU has optional floating point instructions
CPU has MMX instructions
CPU has SSE instructions
CPU has SSE2 instructions
CPU has SSE3 instructions
CPU has x86_64 instructions
Little Endian
##Machine
Machine has 8 CPUs
Machine has 4 physical CPUs
Machine has 8 logical CPUs
Machine has 16.00 GBytes of RAM
Machine using 4.00 KBytes pagesize
##Operating System
Kernel OS Version: Darwin Kernel Version 15.6.0: Tue Apr 11 16:00:51 PDT 2017; root:xnu-3248.60.11.5.3~1/RELEASE_X86_64
##End machine report
./stepanov_abstraction 20000 

test                        description   absolute   operations   ratio with
number                                    time       per second   test0

 0                     "double pointer"   0.03 sec   1164.52 M     1.00
 1               "double pointer_class"   0.51 sec   77.93 M     14.94
 2         "DoubleValueWrapper pointer"   0.38 sec   105.41 M     11.05
 3   "DoubleValueWrapper pointer_class"   0.91 sec   43.77 M     26.60
 4       "DoubleValueWrapper10 pointer"   3.52 sec   11.36 M     102.49
 5 "DoubleValueWrapper10 pointer_class"   3.98 sec   10.05 M     115.92

Total absolute time for Abstraction Accumulate: 9.34 sec

Abstraction Accumulate Penalty: 34.95


test                                       description   absolute   operations   ratio with
number                                                   time       per second   test0

 0                     "insertion_sort double pointer"   0.00 sec    4.68 M     1.00
 1               "insertion_sort double pointer_class"   0.19 sec    0.11 M     44.06
 2         "insertion_sort DoubleValueWrapper pointer"   0.03 sec    0.62 M     7.59
 3   "insertion_sort DoubleValueWrapper pointer_class"   0.21 sec    0.09 M     50.24
 4       "insertion_sort DoubleValueWrapper10 pointer"   0.29 sec    0.07 M     68.47
 5 "insertion_sort DoubleValueWrapper10 pointer_class"   0.45 sec    0.04 M     105.26

Total absolute time for Abstraction Insertion Sort: 1.18 sec

Abstraction Insertion Sort Penalty: 41.36


test                                  description   absolute   operations   ratio with
number                                              time       per second   test0

 0                     "quicksort double pointer"   0.01 sec   16.61 M     1.00
 1               "quicksort double pointer_class"   0.04 sec    3.60 M     4.62
 2         "quicksort DoubleValueWrapper pointer"   0.02 sec    8.01 M     2.07
 3   "quicksort DoubleValueWrapper pointer_class"   0.05 sec    2.92 M     5.69
 4       "quicksort DoubleValueWrapper10 pointer"   0.10 sec    1.67 M     9.94
 5 "quicksort DoubleValueWrapper10 pointer_class"   0.13 sec    1.21 M     13.75

Total absolute time for Abstraction Quicksort: 0.36 sec

Abstraction Quicksort Penalty: 5.95


test                                  description   absolute   operations   ratio with
number                                              time       per second   test0

 0                     "heap_sort double pointer"   0.01 sec   20.27 M     1.00
 1               "heap_sort double pointer_class"   0.06 sec    2.75 M     7.37
 2         "heap_sort DoubleValueWrapper pointer"   0.01 sec   16.31 M     1.24
 3   "heap_sort DoubleValueWrapper pointer_class"   0.06 sec    2.62 M     7.72
 4       "heap_sort DoubleValueWrapper10 pointer"   0.06 sec    2.55 M     7.95
 5 "heap_sort DoubleValueWrapper10 pointer_class"   0.11 sec    1.49 M     13.64

Total absolute time for Abstraction Heap Sort: 0.31 sec

Abstraction Heap Sort Penalty: 5.98

./stepanov_vector 15000 

test                            description   absolute   operations   ratio with
number                                        time       per second   test0

 0                 "double pointer verify2"   0.03 sec   973.90 M     1.00
 1                 "double vector iterator"   0.69 sec   43.76 M     22.26
 2                 "double pointer reverse"   0.49 sec   61.05 M     15.95
 3         "double vector reverse_iterator"   1.17 sec   25.67 M     37.94
 4         "double vector iterator reverse"   1.16 sec   25.82 M     37.72
 5         "double pointer reverse reverse"   1.04 sec   28.96 M     33.63
 6 "double vector reverse_iterator reverse"   1.99 sec   15.06 M     64.69
 7 "double vector iterator reverse reverse"   1.97 sec   15.20 M     64.08

Total absolute time for Vector accumulate: 8.54 sec

Vector accumulate Penalty: 35.48


test                                           description   absolute   operations   ratio with
number                                                       time       per second   test0

 0                 "insertion_sort double pointer verify2"   0.01 sec    4.60 M     1.00
 1                 "insertion_sort double vector iterator"   0.42 sec    0.07 M     64.59
 2                 "insertion_sort double pointer reverse"   0.38 sec    0.08 M     58.79
 3         "insertion_sort double vector reverse_iterator"   1.01 sec    0.03 M     154.78
 4         "insertion_sort double vector iterator reverse"   1.01 sec    0.03 M     154.18
 5         "insertion_sort double pointer reverse reverse"   0.90 sec    0.03 M     138.29
 6 "insertion_sort double vector reverse_iterator reverse"   1.63 sec    0.02 M     249.42
 7 "insertion_sort double vector iterator reverse reverse"   1.64 sec    0.02 M     251.68

Total absolute time for Vector Insertion Sort: 7.00 sec

Vector Insertion Sort Penalty: 134.27


test                                      description   absolute   operations   ratio with
number                                                  time       per second   test0

 0                 "quicksort double pointer verify2"   0.01 sec   16.73 M     1.00
 1                 "quicksort double vector iterator"   0.08 sec    2.87 M     5.82
 2                 "quicksort double pointer reverse"   0.09 sec    2.80 M     5.97
 3         "quicksort double vector reverse_iterator"   0.20 sec    1.20 M     13.90
 4         "quicksort double vector iterator reverse"   0.19 sec    1.26 M     13.32
 5         "quicksort double pointer reverse reverse"   0.19 sec    1.26 M     13.32
 6 "quicksort double vector reverse_iterator reverse"   0.31 sec    0.78 M     21.49
 7 "quicksort double vector iterator reverse reverse"   0.30 sec    0.79 M     21.08

Total absolute time for Vector Quicksort: 1.38 sec

Vector Quicksort Penalty: 12.14


test                                      description   absolute   operations   ratio with
number                                                  time       per second   test0

 0                 "heap_sort double pointer verify2"   0.01 sec   19.29 M     1.00
 1                 "heap_sort double vector iterator"   0.13 sec    1.91 M     10.08
 2                 "heap_sort double pointer reverse"   0.16 sec    1.55 M     12.48
 3         "heap_sort double vector reverse_iterator"   0.36 sec    0.67 M     28.60
 4         "heap_sort double vector iterator reverse"   0.33 sec    0.72 M     26.71
 5         "heap_sort double pointer reverse reverse"   0.34 sec    0.70 M     27.41
 6 "heap_sort double vector reverse_iterator reverse"   0.53 sec    0.45 M     42.88
 7 "heap_sort double vector iterator reverse reverse"   0.53 sec    0.45 M     42.82

Total absolute time for Vector Heap Sort: 2.39 sec

Vector Heap Sort Penalty: 24.18

./functionobjects 200 

test                                                description   absolute   operations   ratio with
number                                                            time       per second   test0

 0                          "qsort array with function pointer"   0.26 sec    7.56 M     1.00
 1             "quicksort function array with function pointer"   0.35 sec    5.80 M     1.30
 2             "quicksort template array with function pointer"   0.35 sec    5.76 M     1.31
 3    "quicksort template array with template function pointer"   0.35 sec    5.79 M     1.30
 4                           "sort array with function pointer"   0.33 sec    6.12 M     1.24
 5        "quicksort template array with user-supplied functor"   0.31 sec    6.54 M     1.16
 6                      "sort array with user-supplied functor"   0.30 sec    6.66 M     1.14
 7 "quicksort template array with user-supplied inline functor"   0.29 sec    6.87 M     1.10
 8               "sort array with user-supplied inline functor"   0.32 sec    6.33 M     1.19
 9             "quicksort template array with standard functor"   0.29 sec    6.86 M     1.10
10                           "sort array with standard functor"   0.31 sec    6.55 M     1.15
11            "quicksort template array with native < operator"   0.13 sec   15.44 M     0.49
12                          "sort array with native < operator"   0.31 sec    6.48 M     1.17

Total absolute time for Function Objects: 3.88 sec
Sun Jun 18 11:18:49 CEST 2017
##END Version 1.0
