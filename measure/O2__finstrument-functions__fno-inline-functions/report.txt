##STARTING Version 1.0
Tue Jun 20 21:25:17 CEST 2017
##Start machine report version 1.0
##Compiler
GCC version 4.2.1 Compatible Clang 3.9.0 (git@github.com:martong/clang.git 9839b199638fbf35d01bdc09e57e9430c5b3f1b9) (git@github.com:martong/llvm.git 7481ed38afc3b6b1fbcfb946c9d1501f1c6232c1)
Compiled for LP64
##Target CPU
Compiled for x86 64bit
##Physical CPU
Mach CPU type 7
CPU_TYPE x86
Mach CPU subtype 8
CPU frequency: 2300.00 Mhz
CPU has optional floating point instructions
CPU has MMX instructions
CPU has SSE instructions
CPU has SSE2 instructions
CPU has SSE3 instructions
CPU has x86_64 instructions
Little Endian
##Machine
Machine has 8 CPUs
Machine has 4 physical CPUs
Machine has 8 logical CPUs
Machine has 16.00 GBytes of RAM
Machine using 4.00 KBytes pagesize
##Operating System
Kernel OS Version: Darwin Kernel Version 15.6.0: Tue Apr 11 16:00:51 PDT 2017; root:xnu-3248.60.11.5.3~1/RELEASE_X86_64
##End machine report
./stepanov_abstraction 20000 

test                        description   absolute   operations   ratio with
number                                    time       per second   test0

 0                     "double pointer"   0.03 sec   1170.55 M     1.00
 1               "double pointer_class"   0.70 sec   57.41 M     20.39
 2         "DoubleValueWrapper pointer"   0.44 sec   91.42 M     12.80
 3   "DoubleValueWrapper pointer_class"   1.19 sec   33.62 M     34.82
 4       "DoubleValueWrapper10 pointer"   4.40 sec    9.09 M     128.72
 5 "DoubleValueWrapper10 pointer_class"   5.17 sec    7.73 M     151.36

Total absolute time for Abstraction Accumulate: 11.93 sec

Abstraction Accumulate Penalty: 44.63


test                                       description   absolute   operations   ratio with
number                                                   time       per second   test0

 0                     "insertion_sort double pointer"   0.00 sec    4.16 M     1.00
 1               "insertion_sort double pointer_class"   0.24 sec    0.08 M     49.87
 2         "insertion_sort DoubleValueWrapper pointer"   0.05 sec    0.42 M     9.90
 3   "insertion_sort DoubleValueWrapper pointer_class"   0.29 sec    0.07 M     60.31
 4       "insertion_sort DoubleValueWrapper10 pointer"   0.42 sec    0.05 M     87.91
 5 "insertion_sort DoubleValueWrapper10 pointer_class"   0.69 sec    0.03 M     144.60

Total absolute time for Abstraction Insertion Sort: 1.70 sec

Abstraction Insertion Sort Penalty: 51.95


test                                  description   absolute   operations   ratio with
number                                              time       per second   test0

 0                     "quicksort double pointer"   0.01 sec   18.39 M     1.00
 1               "quicksort double pointer_class"   0.06 sec    2.77 M     6.63
 2         "quicksort DoubleValueWrapper pointer"   0.02 sec    7.03 M     2.62
 3   "quicksort DoubleValueWrapper pointer_class"   0.07 sec    2.26 M     8.13
 4       "quicksort DoubleValueWrapper10 pointer"   0.15 sec    1.09 M     16.94
 5 "quicksort DoubleValueWrapper10 pointer_class"   0.21 sec    0.77 M     23.90

Total absolute time for Abstraction Quicksort: 0.52 sec

Abstraction Quicksort Penalty: 8.94


test                                  description   absolute   operations   ratio with
number                                              time       per second   test0

 0                     "heap_sort double pointer"   0.01 sec   20.91 M     1.00
 1               "heap_sort double pointer_class"   0.08 sec    2.11 M     9.90
 2         "heap_sort DoubleValueWrapper pointer"   0.01 sec   12.89 M     1.62
 3   "heap_sort DoubleValueWrapper pointer_class"   0.08 sec    1.90 M     10.99
 4       "heap_sort DoubleValueWrapper10 pointer"   0.09 sec    1.81 M     11.57
 5 "heap_sort DoubleValueWrapper10 pointer_class"   0.17 sec    0.97 M     21.60

Total absolute time for Abstraction Heap Sort: 0.43 sec

Abstraction Heap Sort Penalty: 8.49

./stepanov_vector 15000 

test                            description   absolute   operations   ratio with
number                                        time       per second   test0

 0                 "double pointer verify2"   0.03 sec   1120.24 M     1.00
 1                 "double vector iterator"   0.66 sec   45.62 M     24.56
 2                 "double pointer reverse"   0.46 sec   65.03 M     17.23
 3         "double vector reverse_iterator"   1.15 sec   26.00 M     43.09
 4         "double vector iterator reverse"   1.14 sec   26.40 M     42.43
 5         "double pointer reverse reverse"   1.06 sec   28.29 M     39.60
 6 "double vector reverse_iterator reverse"   1.94 sec   15.46 M     72.45
 7 "double vector iterator reverse reverse"   1.94 sec   15.49 M     72.33

Total absolute time for Vector accumulate: 8.37 sec

Vector accumulate Penalty: 39.88


test                                           description   absolute   operations   ratio with
number                                                       time       per second   test0

 0                 "insertion_sort double pointer verify2"   0.01 sec    4.65 M     1.00
 1                 "insertion_sort double vector iterator"   0.42 sec    0.07 M     65.86
 2                 "insertion_sort double pointer reverse"   0.38 sec    0.08 M     59.64
 3         "insertion_sort double vector reverse_iterator"   1.01 sec    0.03 M     156.53
 4         "insertion_sort double vector iterator reverse"   1.00 sec    0.03 M     155.60
 5         "insertion_sort double pointer reverse reverse"   0.89 sec    0.03 M     137.51
 6 "insertion_sort double vector reverse_iterator reverse"   1.60 sec    0.02 M     248.68
 7 "insertion_sort double vector iterator reverse reverse"   1.61 sec    0.02 M     249.91

Total absolute time for Vector Insertion Sort: 6.93 sec

Vector Insertion Sort Penalty: 135.01


test                                      description   absolute   operations   ratio with
number                                                  time       per second   test0

 0                 "quicksort double pointer verify2"   0.01 sec   17.39 M     1.00
 1                 "quicksort double vector iterator"   0.08 sec    2.86 M     6.07
 2                 "quicksort double pointer reverse"   0.08 sec    2.91 M     5.97
 3         "quicksort double vector reverse_iterator"   0.18 sec    1.30 M     13.36
 4         "quicksort double vector iterator reverse"   0.19 sec    1.28 M     13.55
 5         "quicksort double pointer reverse reverse"   0.18 sec    1.35 M     12.89
 6 "quicksort double vector reverse_iterator reverse"   0.31 sec    0.77 M     22.50
 7 "quicksort double vector iterator reverse reverse"   0.31 sec    0.78 M     22.32

Total absolute time for Vector Quicksort: 1.35 sec

Vector Quicksort Penalty: 12.30


test                                      description   absolute   operations   ratio with
number                                                  time       per second   test0

 0                 "heap_sort double pointer verify2"   0.01 sec   19.45 M     1.00
 1                 "heap_sort double vector iterator"   0.12 sec    2.04 M     9.56
 2                 "heap_sort double pointer reverse"   0.15 sec    1.61 M     12.10
 3         "heap_sort double vector reverse_iterator"   0.33 sec    0.73 M     26.79
 4         "heap_sort double vector iterator reverse"   0.33 sec    0.73 M     26.79
 5         "heap_sort double pointer reverse reverse"   0.35 sec    0.68 M     28.73
 6 "heap_sort double vector reverse_iterator reverse"   0.53 sec    0.45 M     43.00
 7 "heap_sort double vector iterator reverse reverse"   0.55 sec    0.44 M     44.23

Total absolute time for Vector Heap Sort: 2.37 sec

Vector Heap Sort Penalty: 23.96

./functionobjects 200 

test                                                description   absolute   operations   ratio with
number                                                            time       per second   test0

 0                          "qsort array with function pointer"   0.27 sec    7.46 M     1.00
 1             "quicksort function array with function pointer"   0.34 sec    5.84 M     1.28
 2             "quicksort template array with function pointer"   0.34 sec    5.82 M     1.28
 3    "quicksort template array with template function pointer"   0.34 sec    5.86 M     1.27
 4                           "sort array with function pointer"   0.32 sec    6.29 M     1.19
 5        "quicksort template array with user-supplied functor"   0.29 sec    6.81 M     1.10
 6                      "sort array with user-supplied functor"   0.28 sec    7.06 M     1.06
 7 "quicksort template array with user-supplied inline functor"   0.32 sec    6.29 M     1.19
 8               "sort array with user-supplied inline functor"   0.28 sec    7.03 M     1.06
 9             "quicksort template array with standard functor"   0.28 sec    7.02 M     1.06
10                           "sort array with standard functor"   0.30 sec    6.58 M     1.13
11            "quicksort template array with native < operator"   0.13 sec   15.67 M     0.48
12                          "sort array with native < operator"   0.30 sec    6.57 M     1.14

Total absolute time for Function Objects: 3.81 sec
Tue Jun 20 21:25:55 CEST 2017
##END Version 1.0
