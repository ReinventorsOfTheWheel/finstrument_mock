##STARTING Version 1.0
Sat Jun 17 21:41:28 CEST 2017
##Start machine report version 1.0
##Compiler
GCC version 4.2.1 Compatible Clang 3.9.0 (git@github.com:martong/clang.git 9839b199638fbf35d01bdc09e57e9430c5b3f1b9) (git@github.com:martong/llvm.git 7481ed38afc3b6b1fbcfb946c9d1501f1c6232c1)
Compiled for LP64
##Target CPU
Compiled for x86 64bit
##Physical CPU
Mach CPU type 7
CPU_TYPE x86
Mach CPU subtype 8
CPU frequency: 2300.00 Mhz
CPU has optional floating point instructions
CPU has MMX instructions
CPU has SSE instructions
CPU has SSE2 instructions
CPU has SSE3 instructions
CPU has x86_64 instructions
Little Endian
##Machine
Machine has 8 CPUs
Machine has 4 physical CPUs
Machine has 8 logical CPUs
Machine has 16.00 GBytes of RAM
Machine using 4.00 KBytes pagesize
##Operating System
Kernel OS Version: Darwin Kernel Version 15.6.0: Tue Apr 11 16:00:51 PDT 2017; root:xnu-3248.60.11.5.3~1/RELEASE_X86_64
##End machine report
./stepanov_abstraction 20000 

test                        description   absolute   operations   ratio with
number                                    time       per second   test0

 0                     "double pointer"   0.04 sec   1125.33 M     1.00
 1               "double pointer_class"   0.03 sec   1144.82 M     0.98
 2         "DoubleValueWrapper pointer"   0.03 sec   1146.56 M     0.98
 3   "DoubleValueWrapper pointer_class"   0.04 sec   1032.87 M     1.09
 4       "DoubleValueWrapper10 pointer"   0.03 sec   1158.75 M     0.97
 5 "DoubleValueWrapper10 pointer_class"   0.04 sec   1031.83 M     1.09

Total absolute time for Abstraction Accumulate: 0.22 sec

Abstraction Accumulate Penalty: 1.02


test                                       description   absolute   operations   ratio with
number                                                   time       per second   test0

 0                     "insertion_sort double pointer"   0.00 sec    4.64 M     1.00
 1               "insertion_sort double pointer_class"   0.01 sec    3.26 M     1.42
 2         "insertion_sort DoubleValueWrapper pointer"   0.00 sec    4.76 M     0.97
 3   "insertion_sort DoubleValueWrapper pointer_class"   0.01 sec    3.34 M     1.39
 4       "insertion_sort DoubleValueWrapper10 pointer"   0.00 sec    4.70 M     0.99
 5 "insertion_sort DoubleValueWrapper10 pointer_class"   0.01 sec    3.26 M     1.42

Total absolute time for Abstraction Insertion Sort: 0.03 sec

Abstraction Insertion Sort Penalty: 1.22


test                                  description   absolute   operations   ratio with
number                                              time       per second   test0

 0                     "quicksort double pointer"   0.01 sec   19.53 M     1.00
 1               "quicksort double pointer_class"   0.01 sec   20.26 M     0.96
 2         "quicksort DoubleValueWrapper pointer"   0.01 sec   19.31 M     1.01
 3   "quicksort DoubleValueWrapper pointer_class"   0.01 sec   19.93 M     0.98
 4       "quicksort DoubleValueWrapper10 pointer"   0.01 sec   20.91 M     0.93
 5 "quicksort DoubleValueWrapper10 pointer_class"   0.01 sec   20.60 M     0.95

Total absolute time for Abstraction Quicksort: 0.05 sec

Abstraction Quicksort Penalty: 0.97


test                                  description   absolute   operations   ratio with
number                                              time       per second   test0

 0                     "heap_sort double pointer"   0.01 sec   24.76 M     1.00
 1               "heap_sort double pointer_class"   0.01 sec   24.36 M     1.02
 2         "heap_sort DoubleValueWrapper pointer"   0.01 sec   23.65 M     1.05
 3   "heap_sort DoubleValueWrapper pointer_class"   0.01 sec   24.38 M     1.02
 4       "heap_sort DoubleValueWrapper10 pointer"   0.01 sec   24.90 M     0.99
 5 "heap_sort DoubleValueWrapper10 pointer_class"   0.01 sec   24.55 M     1.01

Total absolute time for Abstraction Heap Sort: 0.04 sec

Abstraction Heap Sort Penalty: 1.02

./stepanov_vector 15000 

test                            description   absolute   operations   ratio with
number                                        time       per second   test0

 0                 "double pointer verify2"   0.03 sec   1064.96 M     1.00
 1                 "double vector iterator"   0.03 sec   1156.96 M     0.92
 2                 "double pointer reverse"   0.03 sec   1157.36 M     0.92
 3         "double vector reverse_iterator"   0.03 sec   1137.61 M     0.94
 4         "double vector iterator reverse"   0.03 sec   1036.84 M     1.03
 5         "double pointer reverse reverse"   0.03 sec   1122.96 M     0.95
 6 "double vector reverse_iterator reverse"   0.03 sec   1160.77 M     0.92
 7 "double vector iterator reverse reverse"   0.03 sec   1134.47 M     0.94

Total absolute time for Vector accumulate: 0.21 sec

Vector accumulate Penalty: 0.94


test                                           description   absolute   operations   ratio with
number                                                       time       per second   test0

 0                 "insertion_sort double pointer verify2"   0.01 sec    4.69 M     1.00
 1                 "insertion_sort double vector iterator"   0.01 sec    3.26 M     1.44
 2                 "insertion_sort double pointer reverse"   0.01 sec    4.56 M     1.03
 3         "insertion_sort double vector reverse_iterator"   0.01 sec    4.60 M     1.02
 4         "insertion_sort double vector iterator reverse"   0.01 sec    3.86 M     1.21
 5         "insertion_sort double pointer reverse reverse"   0.01 sec    3.39 M     1.38
 6 "insertion_sort double vector reverse_iterator reverse"   0.01 sec    4.50 M     1.04
 7 "insertion_sort double vector iterator reverse reverse"   0.01 sec    4.77 M     0.98

Total absolute time for Vector Insertion Sort: 0.06 sec

Vector Insertion Sort Penalty: 1.15


test                                      description   absolute   operations   ratio with
number                                                  time       per second   test0

 0                 "quicksort double pointer verify2"   0.01 sec   19.88 M     1.00
 1                 "quicksort double vector iterator"   0.01 sec   20.42 M     0.97
 2                 "quicksort double pointer reverse"   0.02 sec   13.87 M     1.43
 3         "quicksort double vector reverse_iterator"   0.01 sec   19.01 M     1.05
 4         "quicksort double vector iterator reverse"   0.01 sec   19.24 M     1.03
 5         "quicksort double pointer reverse reverse"   0.01 sec   17.43 M     1.14
 6 "quicksort double vector reverse_iterator reverse"   0.01 sec   17.54 M     1.13
 7 "quicksort double vector iterator reverse reverse"   0.01 sec   17.79 M     1.12

Total absolute time for Vector Quicksort: 0.11 sec

Vector Quicksort Penalty: 1.12


test                                      description   absolute   operations   ratio with
number                                                  time       per second   test0

 0                 "heap_sort double pointer verify2"   0.01 sec   25.09 M     1.00
 1                 "heap_sort double vector iterator"   0.01 sec   24.41 M     1.03
 2                 "heap_sort double pointer reverse"   0.01 sec   19.45 M     1.29
 3         "heap_sort double vector reverse_iterator"   0.01 sec   19.37 M     1.30
 4         "heap_sort double vector iterator reverse"   0.02 sec   15.76 M     1.59
 5         "heap_sort double pointer reverse reverse"   0.01 sec   24.97 M     1.00
 6 "heap_sort double vector reverse_iterator reverse"   0.01 sec   22.02 M     1.14
 7 "heap_sort double vector iterator reverse reverse"   0.01 sec   24.19 M     1.04

Total absolute time for Vector Heap Sort: 0.09 sec

Vector Heap Sort Penalty: 1.18

./functionobjects 200 

test                                                description   absolute   operations   ratio with
number                                                            time       per second   test0

 0                          "qsort array with function pointer"   0.22 sec    9.23 M     1.00
 1             "quicksort function array with function pointer"   0.17 sec   11.44 M     0.81
 2             "quicksort template array with function pointer"   0.18 sec   11.24 M     0.82
 3    "quicksort template array with template function pointer"   0.18 sec   11.19 M     0.82
 4                           "sort array with function pointer"   0.14 sec   14.78 M     0.62
 5        "quicksort template array with user-supplied functor"   0.12 sec   16.65 M     0.55
 6                      "sort array with user-supplied functor"   0.10 sec   19.98 M     0.46
 7 "quicksort template array with user-supplied inline functor"   0.12 sec   16.32 M     0.57
 8               "sort array with user-supplied inline functor"   0.10 sec   19.22 M     0.48
 9             "quicksort template array with standard functor"   0.12 sec   16.57 M     0.56
10                           "sort array with standard functor"   0.10 sec   20.89 M     0.44
11            "quicksort template array with native < operator"   0.13 sec   15.84 M     0.58
12                          "sort array with native < operator"   0.10 sec   20.93 M     0.44

Total absolute time for Function Objects: 1.77 sec
Sat Jun 17 21:41:31 CEST 2017
##END Version 1.0
