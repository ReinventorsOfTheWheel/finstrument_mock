##STARTING Version 1.0
Tue Jun 20 21:26:07 CEST 2017
##Start machine report version 1.0
##Compiler
GCC version 4.2.1 Compatible Clang 3.9.0 (git@github.com:martong/clang.git 9839b199638fbf35d01bdc09e57e9430c5b3f1b9) (git@github.com:martong/llvm.git 7481ed38afc3b6b1fbcfb946c9d1501f1c6232c1)
Compiled for LP64
##Target CPU
Compiled for x86 64bit
##Physical CPU
Mach CPU type 7
CPU_TYPE x86
Mach CPU subtype 8
CPU frequency: 2300.00 Mhz
CPU has optional floating point instructions
CPU has MMX instructions
CPU has SSE instructions
CPU has SSE2 instructions
CPU has SSE3 instructions
CPU has x86_64 instructions
Little Endian
##Machine
Machine has 8 CPUs
Machine has 4 physical CPUs
Machine has 8 logical CPUs
Machine has 16.00 GBytes of RAM
Machine using 4.00 KBytes pagesize
##Operating System
Kernel OS Version: Darwin Kernel Version 15.6.0: Tue Apr 11 16:00:51 PDT 2017; root:xnu-3248.60.11.5.3~1/RELEASE_X86_64
##End machine report
./stepanov_abstraction 20000 

test                        description   absolute   operations   ratio with
number                                    time       per second   test0

 0                     "double pointer"   0.03 sec   1173.26 M     1.00
 1               "double pointer_class"   0.38 sec   103.95 M     11.29
 2         "DoubleValueWrapper pointer"   0.32 sec   124.62 M     9.41
 3   "DoubleValueWrapper pointer_class"   0.76 sec   52.81 M     22.22
 4       "DoubleValueWrapper10 pointer"   3.58 sec   11.18 M     104.92
 5 "DoubleValueWrapper10 pointer_class"   4.02 sec    9.94 M     117.98

Total absolute time for Abstraction Accumulate: 9.10 sec

Abstraction Accumulate Penalty: 31.13


test                                       description   absolute   operations   ratio with
number                                                   time       per second   test0

 0                     "insertion_sort double pointer"   0.00 sec    4.71 M     1.00
 1               "insertion_sort double pointer_class"   0.15 sec    0.14 M     34.45
 2         "insertion_sort DoubleValueWrapper pointer"   0.03 sec    0.77 M     6.13
 3   "insertion_sort DoubleValueWrapper pointer_class"   0.17 sec    0.12 M     40.52
 4       "insertion_sort DoubleValueWrapper10 pointer"   0.23 sec    0.09 M     54.50
 5 "insertion_sort DoubleValueWrapper10 pointer_class"   0.39 sec    0.05 M     92.05

Total absolute time for Abstraction Insertion Sort: 0.97 sec

Abstraction Insertion Sort Penalty: 33.62


test                                  description   absolute   operations   ratio with
number                                              time       per second   test0

 0                     "quicksort double pointer"   0.01 sec   18.29 M     1.00
 1               "quicksort double pointer_class"   0.04 sec    3.87 M     4.72
 2         "quicksort DoubleValueWrapper pointer"   0.02 sec    8.96 M     2.04
 3   "quicksort DoubleValueWrapper pointer_class"   0.05 sec    3.42 M     5.36
 4       "quicksort DoubleValueWrapper10 pointer"   0.09 sec    1.86 M     9.83
 5 "quicksort DoubleValueWrapper10 pointer_class"   0.12 sec    1.31 M     13.98

Total absolute time for Abstraction Quicksort: 0.32 sec

Abstraction Quicksort Penalty: 5.89


test                                  description   absolute   operations   ratio with
number                                              time       per second   test0

 0                     "heap_sort double pointer"   0.01 sec   23.21 M     1.00
 1               "heap_sort double pointer_class"   0.05 sec    3.27 M     7.10
 2         "heap_sort DoubleValueWrapper pointer"   0.01 sec   15.16 M     1.53
 3   "heap_sort DoubleValueWrapper pointer_class"   0.05 sec    3.05 M     7.61
 4       "heap_sort DoubleValueWrapper10 pointer"   0.05 sec    3.16 M     7.34
 5 "heap_sort DoubleValueWrapper10 pointer_class"   0.10 sec    1.56 M     14.88

Total absolute time for Abstraction Heap Sort: 0.27 sec

Abstraction Heap Sort Penalty: 6.18

./stepanov_vector 15000 

test                            description   absolute   operations   ratio with
number                                        time       per second   test0

 0                 "double pointer verify2"   0.03 sec   1156.47 M     1.00
 1                 "double vector iterator"   0.03 sec   1160.99 M     1.00
 2                 "double pointer reverse"   0.03 sec   1168.22 M     0.99
 3         "double vector reverse_iterator"   0.03 sec   1168.13 M     0.99
 4         "double vector iterator reverse"   0.03 sec   1010.00 M     1.15
 5         "double pointer reverse reverse"   0.03 sec   1167.86 M     0.99
 6 "double vector reverse_iterator reverse"   0.03 sec   1149.21 M     1.01
 7 "double vector iterator reverse reverse"   0.03 sec   1126.72 M     1.03

Total absolute time for Vector accumulate: 0.21 sec

Vector accumulate Penalty: 1.02


test                                           description   absolute   operations   ratio with
number                                                       time       per second   test0

 0                 "insertion_sort double pointer verify2"   0.01 sec    4.60 M     1.00
 1                 "insertion_sort double vector iterator"   0.01 sec    3.21 M     1.44
 2                 "insertion_sort double pointer reverse"   0.01 sec    4.13 M     1.12
 3         "insertion_sort double vector reverse_iterator"   0.01 sec    4.42 M     1.04
 4         "insertion_sort double vector iterator reverse"   0.01 sec    4.59 M     1.00
 5         "insertion_sort double pointer reverse reverse"   0.01 sec    4.82 M     0.96
 6 "insertion_sort double vector reverse_iterator reverse"   0.01 sec    4.81 M     0.96
 7 "insertion_sort double vector iterator reverse reverse"   0.01 sec    4.72 M     0.98

Total absolute time for Vector Insertion Sort: 0.06 sec

Vector Insertion Sort Penalty: 1.06


test                                      description   absolute   operations   ratio with
number                                                  time       per second   test0

 0                 "quicksort double pointer verify2"   0.01 sec   17.95 M     1.00
 1                 "quicksort double vector iterator"   0.01 sec   19.14 M     0.94
 2                 "quicksort double pointer reverse"   0.01 sec   17.26 M     1.04
 3         "quicksort double vector reverse_iterator"   0.01 sec   16.79 M     1.07
 4         "quicksort double vector iterator reverse"   0.01 sec   17.20 M     1.04
 5         "quicksort double pointer reverse reverse"   0.02 sec   15.32 M     1.17
 6 "quicksort double vector reverse_iterator reverse"   0.02 sec   15.18 M     1.18
 7 "quicksort double vector iterator reverse reverse"   0.02 sec   15.20 M     1.18

Total absolute time for Vector Quicksort: 0.12 sec

Vector Quicksort Penalty: 1.09


test                                      description   absolute   operations   ratio with
number                                                  time       per second   test0

 0                 "heap_sort double pointer verify2"   0.01 sec   22.96 M     1.00
 1                 "heap_sort double vector iterator"   0.01 sec   23.05 M     1.00
 2                 "heap_sort double pointer reverse"   0.01 sec   18.56 M     1.24
 3         "heap_sort double vector reverse_iterator"   0.01 sec   18.65 M     1.23
 4         "heap_sort double vector iterator reverse"   0.01 sec   18.93 M     1.21
 5         "heap_sort double pointer reverse reverse"   0.01 sec   20.87 M     1.10
 6 "heap_sort double vector reverse_iterator reverse"   0.01 sec   20.33 M     1.13
 7 "heap_sort double vector iterator reverse reverse"   0.01 sec   20.71 M     1.11

Total absolute time for Vector Heap Sort: 0.09 sec

Vector Heap Sort Penalty: 1.14

./functionobjects 200 

test                                                description   absolute   operations   ratio with
number                                                            time       per second   test0

 0                          "qsort array with function pointer"   0.20 sec   10.06 M     1.00
 1             "quicksort function array with function pointer"   0.30 sec    6.67 M     1.51
 2             "quicksort template array with function pointer"   0.31 sec    6.47 M     1.56
 3    "quicksort template array with template function pointer"   0.30 sec    6.69 M     1.51
 4                           "sort array with function pointer"   0.23 sec    8.79 M     1.14
 5        "quicksort template array with user-supplied functor"   0.25 sec    7.84 M     1.28
 6                      "sort array with user-supplied functor"   0.17 sec   11.44 M     0.88
 7 "quicksort template array with user-supplied inline functor"   0.25 sec    8.06 M     1.25
 8               "sort array with user-supplied inline functor"   0.17 sec   11.68 M     0.86
 9             "quicksort template array with standard functor"   0.13 sec   15.84 M     0.64
10                           "sort array with standard functor"   0.10 sec   20.19 M     0.50
11            "quicksort template array with native < operator"   0.14 sec   14.52 M     0.69
12                          "sort array with native < operator"   0.10 sec   19.88 M     0.51

Total absolute time for Function Objects: 2.65 sec
Tue Jun 20 21:26:22 CEST 2017
##END Version 1.0
