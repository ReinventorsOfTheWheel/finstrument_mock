##STARTING Version 1.0
Sun Jun 18 11:18:09 CEST 2017
##Start machine report version 1.0
##Compiler
GCC version 4.2.1 Compatible Clang 3.9.0 (git@github.com:martong/clang.git 9839b199638fbf35d01bdc09e57e9430c5b3f1b9) (git@github.com:martong/llvm.git 7481ed38afc3b6b1fbcfb946c9d1501f1c6232c1)
Compiled for LP64
##Target CPU
Compiled for x86 64bit
##Physical CPU
Mach CPU type 7
CPU_TYPE x86
Mach CPU subtype 8
CPU frequency: 2300.00 Mhz
CPU has optional floating point instructions
CPU has MMX instructions
CPU has SSE instructions
CPU has SSE2 instructions
CPU has SSE3 instructions
CPU has x86_64 instructions
Little Endian
##Machine
Machine has 8 CPUs
Machine has 4 physical CPUs
Machine has 8 logical CPUs
Machine has 16.00 GBytes of RAM
Machine using 4.00 KBytes pagesize
##Operating System
Kernel OS Version: Darwin Kernel Version 15.6.0: Tue Apr 11 16:00:51 PDT 2017; root:xnu-3248.60.11.5.3~1/RELEASE_X86_64
##End machine report
./stepanov_abstraction 20000 

test                        description   absolute   operations   ratio with
number                                    time       per second   test0

 0                     "double pointer"   0.04 sec   1103.30 M     1.00
 1               "double pointer_class"   0.03 sec   1171.34 M     0.94
 2         "DoubleValueWrapper pointer"   0.03 sec   1167.51 M     0.95
 3   "DoubleValueWrapper pointer_class"   0.03 sec   1161.61 M     0.95
 4       "DoubleValueWrapper10 pointer"   0.03 sec   1173.81 M     0.94
 5 "DoubleValueWrapper10 pointer_class"   0.03 sec   1150.98 M     0.96

Total absolute time for Abstraction Accumulate: 0.21 sec

Abstraction Accumulate Penalty: 0.95


test                                       description   absolute   operations   ratio with
number                                                   time       per second   test0

 0                     "insertion_sort double pointer"   0.00 sec    4.41 M     1.00
 1               "insertion_sort double pointer_class"   0.01 sec    2.26 M     1.95
 2         "insertion_sort DoubleValueWrapper pointer"   0.01 sec    3.58 M     1.23
 3   "insertion_sort DoubleValueWrapper pointer_class"   0.01 sec    3.03 M     1.45
 4       "insertion_sort DoubleValueWrapper10 pointer"   0.00 sec    4.84 M     0.91
 5 "insertion_sort DoubleValueWrapper10 pointer_class"   0.01 sec    3.35 M     1.32

Total absolute time for Abstraction Insertion Sort: 0.04 sec

Abstraction Insertion Sort Penalty: 1.33


test                                  description   absolute   operations   ratio with
number                                              time       per second   test0

 0                     "quicksort double pointer"   0.01 sec   19.39 M     1.00
 1               "quicksort double pointer_class"   0.01 sec   20.93 M     0.93
 2         "quicksort DoubleValueWrapper pointer"   0.01 sec   20.63 M     0.94
 3   "quicksort DoubleValueWrapper pointer_class"   0.01 sec   20.50 M     0.95
 4       "quicksort DoubleValueWrapper10 pointer"   0.01 sec   20.38 M     0.95
 5 "quicksort DoubleValueWrapper10 pointer_class"   0.01 sec   20.91 M     0.93

Total absolute time for Abstraction Quicksort: 0.05 sec

Abstraction Quicksort Penalty: 0.94


test                                  description   absolute   operations   ratio with
number                                              time       per second   test0

 0                     "heap_sort double pointer"   0.01 sec   24.95 M     1.00
 1               "heap_sort double pointer_class"   0.01 sec   24.52 M     1.02
 2         "heap_sort DoubleValueWrapper pointer"   0.01 sec   25.15 M     0.99
 3   "heap_sort DoubleValueWrapper pointer_class"   0.01 sec   24.93 M     1.00
 4       "heap_sort DoubleValueWrapper10 pointer"   0.01 sec   25.56 M     0.98
 5 "heap_sort DoubleValueWrapper10 pointer_class"   0.01 sec   24.85 M     1.00

Total absolute time for Abstraction Heap Sort: 0.04 sec

Abstraction Heap Sort Penalty: 1.00

./stepanov_vector 15000 

test                            description   absolute   operations   ratio with
number                                        time       per second   test0

 0                 "double pointer verify2"   0.03 sec   1164.01 M     1.00
 1                 "double vector iterator"   0.03 sec   1167.09 M     1.00
 2                 "double pointer reverse"   0.03 sec   987.36 M     1.18
 3         "double vector reverse_iterator"   0.03 sec   1154.02 M     1.01
 4         "double vector iterator reverse"   0.03 sec   1158.44 M     1.00
 5         "double pointer reverse reverse"   0.03 sec   1161.89 M     1.00
 6 "double vector reverse_iterator reverse"   0.03 sec   1174.90 M     0.99
 7 "double vector iterator reverse reverse"   0.03 sec   1171.37 M     0.99

Total absolute time for Vector accumulate: 0.21 sec

Vector accumulate Penalty: 1.02


test                                           description   absolute   operations   ratio with
number                                                       time       per second   test0

 0                 "insertion_sort double pointer verify2"   0.01 sec    4.72 M     1.00
 1                 "insertion_sort double vector iterator"   0.01 sec    3.30 M     1.43
 2                 "insertion_sort double pointer reverse"   0.01 sec    4.54 M     1.04
 3         "insertion_sort double vector reverse_iterator"   0.01 sec    4.14 M     1.14
 4         "insertion_sort double vector iterator reverse"   0.01 sec    4.60 M     1.02
 5         "insertion_sort double pointer reverse reverse"   0.01 sec    4.77 M     0.99
 6 "insertion_sort double vector reverse_iterator reverse"   0.01 sec    4.79 M     0.98
 7 "insertion_sort double vector iterator reverse reverse"   0.01 sec    4.78 M     0.99

Total absolute time for Vector Insertion Sort: 0.05 sec

Vector Insertion Sort Penalty: 1.08


test                                      description   absolute   operations   ratio with
number                                                  time       per second   test0

 0                 "quicksort double pointer verify2"   0.01 sec   20.29 M     1.00
 1                 "quicksort double vector iterator"   0.01 sec   20.34 M     1.00
 2                 "quicksort double pointer reverse"   0.02 sec   14.52 M     1.40
 3         "quicksort double vector reverse_iterator"   0.01 sec   18.84 M     1.08
 4         "quicksort double vector iterator reverse"   0.01 sec   19.45 M     1.04
 5         "quicksort double pointer reverse reverse"   0.01 sec   17.07 M     1.19
 6 "quicksort double vector reverse_iterator reverse"   0.01 sec   17.40 M     1.17
 7 "quicksort double vector iterator reverse reverse"   0.01 sec   17.57 M     1.15

Total absolute time for Vector Quicksort: 0.11 sec

Vector Quicksort Penalty: 1.14


test                                      description   absolute   operations   ratio with
number                                                  time       per second   test0

 0                 "heap_sort double pointer verify2"   0.01 sec   25.03 M     1.00
 1                 "heap_sort double vector iterator"   0.01 sec   24.66 M     1.02
 2                 "heap_sort double pointer reverse"   0.01 sec   20.55 M     1.22
 3         "heap_sort double vector reverse_iterator"   0.01 sec   17.85 M     1.40
 4         "heap_sort double vector iterator reverse"   0.01 sec   16.36 M     1.53
 5         "heap_sort double pointer reverse reverse"   0.01 sec   24.79 M     1.01
 6 "heap_sort double vector reverse_iterator reverse"   0.01 sec   24.79 M     1.01
 7 "heap_sort double vector iterator reverse reverse"   0.01 sec   17.44 M     1.44

Total absolute time for Vector Heap Sort: 0.09 sec

Vector Heap Sort Penalty: 1.21

./functionobjects 200 

test                                                description   absolute   operations   ratio with
number                                                            time       per second   test0

 0                          "qsort array with function pointer"   0.20 sec    9.86 M     1.00
 1             "quicksort function array with function pointer"   0.18 sec   10.97 M     0.90
 2             "quicksort template array with function pointer"   0.18 sec   11.29 M     0.87
 3    "quicksort template array with template function pointer"   0.17 sec   11.48 M     0.86
 4                           "sort array with function pointer"   0.13 sec   15.12 M     0.65
 5        "quicksort template array with user-supplied functor"   0.12 sec   16.10 M     0.61
 6                      "sort array with user-supplied functor"   0.09 sec   21.28 M     0.46
 7 "quicksort template array with user-supplied inline functor"   0.12 sec   16.54 M     0.60
 8               "sort array with user-supplied inline functor"   0.09 sec   21.38 M     0.46
 9             "quicksort template array with standard functor"   0.13 sec   15.93 M     0.62
10                           "sort array with standard functor"   0.10 sec   20.32 M     0.49
11            "quicksort template array with native < operator"   0.12 sec   16.65 M     0.59
12                          "sort array with native < operator"   0.10 sec   20.57 M     0.48

Total absolute time for Function Objects: 1.74 sec
Sun Jun 18 11:18:12 CEST 2017
##END Version 1.0
